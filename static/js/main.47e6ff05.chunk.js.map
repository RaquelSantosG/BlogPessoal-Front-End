{"version":3,"sources":["store/tokens/actions.ts","components/estaticos/navbar/Navbar.tsx","components/estaticos/footer/Footer.tsx","services/Service.ts","paginas/cadastroUsuario/CadastroUsuario.tsx","components/postagens/listapostagem/ListaPostagem.tsx","components/postagens/tabpostagem/TabPostagem.tsx","components/postagens/cadastroPost/CadastroPost.tsx","components/postagens/modalPostagem/ModalPostagem.tsx","paginas/home/Home.tsx","paginas/login/Login.tsx","components/temas/listatema/ListaTema.tsx","components/temas/cadastroTema/CadastroTema.tsx","components/postagens/deletarPostagem/DeletarPostagem.tsx","components/temas/deletarTema/DeletarTema.tsx","store/tokens/tokensReducer.ts","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["addToken","token","type","payload","Navbar","navbarComponent","useSelector","state","tokens","history","useHistory","dispatch","useDispatch","AppBar","position","Toolbar","variant","Box","className","Typography","color","display","justifyContent","to","mx","onClick","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","Footer","footerComponent","Grid","container","direction","alignItems","item","xs","paddingTop","align","gutterBottom","href","target","api","axios","create","baseURL","cadastroUsuario","url","dados","setDado","a","post","resposta","data","login","busca","header","get","buscaId","put","deleteId","delete","CadastroUsuario","useState","confirmarSenha","setConfirmarSenha","id","nome","usuario","senha","user","setUser","userResult","setUserResult","updatedModel","e","name","value","preventDefault","success","error","useEffect","paddingX","onSubmit","component","TextField","onChange","label","margin","fullWidth","confirmarSenhaHandle","marginTop","textAlign","Button","ListaPostagem","posts","setPosts","headers","getPost","length","map","m","Card","CardContent","titulo","texto","tema","descricao","CardActions","mb","size","TabPostagem","setValue","TabContext","Tabs","centered","indicatorColor","event","newValue","Tab","TabPanel","flexWrap","CadastroPost","useParams","temas","setTemas","setTema","postagem","setPostagem","updatedPostagem","back","getTemas","findByIdPostagem","Container","maxWidth","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","getModalStyle","top","left","transform","useStyles","makeStyles","createStyles","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ModalPostagem","classes","React","modalStyle","open","setOpen","handleClose","body","style","Modal","onClose","aria-labelledby","aria-describedby","Home","marginRight","src","alt","height","Login","setToken","userLogin","setUserLogin","ListaTema","getTema","CadastroTema","console","log","JSON","stringify","findById","updatedTema","DeletarPostagem","ml","DeletarTema","initialState","store","createStore","action","App","basename","process","minHeight","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47e6ff05.chunk.js","sourcesContent":["export type Action = {type: \"ADD_TOKEN\"; payload: string};\r\n\r\nexport const addToken = (token: string): Action =>({\r\n    type: \"ADD_TOKEN\",\r\n    payload: token,\r\n});","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToken } from '../../../store/tokens/actions';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction Navbar() {\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    function goLogout(){\r\n        dispatch(addToken(''));\r\n        toast.info('Usuário deslogado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n        history.push('/login')\r\n    }\r\n\r\n    var navbarComponent;\r\n\r\n    if(token != \"\"){\r\n        navbarComponent = <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n            <Box className='cursor'>\r\n                <Typography variant=\"h5\" color=\"inherit\">\r\n                    BlogPessoal\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box display=\"flex\" justifyContent=\"start\">\r\n                <Link to=\"/home\" className=\"text-decorator-none\">\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            home\r\n                        </Typography>\r\n                    </Box>\r\n                </Link>\r\n                <Link to=\"/posts\" className=\"text-decorator-none\">\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            postagens\r\n                        </Typography>\r\n                    </Box>\r\n                </Link>\r\n                <Link to=\"/temas\" className=\"text-decorator-none\">\r\n                <Box mx={1} className='cursor'>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        temas\r\n                    </Typography>\r\n                </Box>\r\n                </Link>\r\n                <Link to=\"/formularioTema\" className=\"text-decorator-none\">\r\n                <Box mx={1} className='cursor'>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        cadastrar tema\r\n                    </Typography>\r\n                </Box>\r\n                </Link>\r\n              \r\n                    <Box mx={1} className='cursor' onClick={goLogout}>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            logout\r\n                        </Typography>\r\n                    </Box>\r\n                \r\n            </Box>\r\n\r\n        </Toolbar>\r\n    </AppBar>\r\n    }\r\n    return (\r\n        <>\r\n            {navbarComponent}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {Typography, Box, Grid } from '@material-ui/core';\r\nimport \"./Footer.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TokenState } from \"../../../store/tokens/tokensReducer\";\r\n\r\nfunction Footer() {\r\n\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    var footerComponent;\r\n\r\n    if(token != \"\"){\r\n        footerComponent = <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid alignItems=\"center\" item xs={12}>\r\n            <Box className=\"box1\">\r\n                <Box paddingTop={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                    <Typography variant=\"h5\" align=\"center\" gutterBottom className=\"textos\">Siga-nos nas redes sociais </Typography>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                    <a href=\"\" target=\"_blank\">\r\n                        <FacebookIcon className=\"redes\" />\r\n                    </a>\r\n                    <a href=\"\" target=\"_blank\">\r\n                        <InstagramIcon className=\"redes\" />\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n            <Box className=\"box2\">\r\n                <Box paddingTop={1}>\r\n                    <Typography variant=\"subtitle2\" align=\"center\" gutterBottom className=\"textos\">© 2020 Copyright:</Typography>\r\n                </Box>\r\n                <Box>\r\n                    <a target=\"_blank\" href=\"\">\r\n                        <Typography variant=\"subtitle2\" gutterBottom className=\"textos\" align=\"center\">Todos os direitos reservados a Raquel Gomes</Typography>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    </Grid>\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         {footerComponent}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL: 'https://raquelnewblog.herokuapp.com'\r\n})\r\n\r\nexport const cadastroUsuario = async(url: any,dados: any,setDado: any) => {\r\n    const resposta = await api.post(url, dados)\r\n    setDado(resposta.data)\r\n}\r\n\r\n\r\nexport const login = async(url: any,dados: any,setDado: any) => {\r\n    const resposta = await api.post(url, dados)\r\n    setDado(resposta.data.token)\r\n\r\n}\r\n\r\nexport const busca = async(url: any,setDado: any, header: any) => { \r\n    const resposta = await api.get(url,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const buscaId = async(url: any,setDado: any, header: any) => { \r\n    const resposta = await api.get(url,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const post = async(url: any, dados: any, setDado: any, header: any) => { \r\n    const resposta = await api.post(url,dados,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const put = async(url: any, dados: any, setDado: any, header: any) => { \r\n    const resposta = await api.put(url,dados,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const deleteId = async(url: any,header: any) => { \r\n    await api.delete(url,header)\r\n}","import React , {useState, useEffect, ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport User from '../../models/User';\r\nimport { cadastroUsuario } from '../../services/Service';\r\nimport { Grid, Box, Typography, Button, TextField } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './CadastroUsuario.css';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction CadastroUsuario() {\r\n\r\n    let history = useHistory();\r\n    const [confirmarSenha,setConfirmarSenha] = useState<String>(\"\")\r\n    const [user, setUser] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (userResult.id != 0) {\r\n            history.push('/login')\r\n        }\r\n    }, [userResult])\r\n\r\n\r\n    function confirmarSenhaHandle(e: ChangeEvent<HTMLInputElement>){\r\n        setConfirmarSenha(e.target.value)\r\n    }\r\n\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n        if(confirmarSenha == user.senha){\r\n        cadastroUsuario('/usuarios/cadastrar', user, setUserResult)\r\n        toast.success('Usuario cadastrado com sucesso', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });   \r\n        }else{\r\n            toast.error('Dados inconsistentes. Favor verificar as informações de cadastro.', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });   \r\n        }\r\n    }\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid item xs={6} className='imagem2'></Grid>\r\n            <Grid item xs={6} alignItems='center'>\r\n                <Box paddingX={10}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='textos2'>Cadastrar</Typography>\r\n                        <TextField value={user.nome} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='nome' label='nome' variant='outlined' name='nome' margin='normal' fullWidth />\r\n                        <TextField value={user.usuario} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}id='usuario' label='usuario' variant='outlined' name='usuario' margin='normal'fullWidth />\r\n                        <TextField value={user.senha} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}id='senha' label='senha' variant='outlined' name='senha' margin='normal' type='password' fullWidth />\r\n                        <TextField value={confirmarSenha} onChange={(e: ChangeEvent<HTMLInputElement>) => confirmarSenhaHandle(e)}id='confirmarSenha' label='confirmarSenha' variant='outlined' name='confirmarSenha' margin='normal' type='password' fullWidth />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                            <Link to='/login' className='text-decorator-none'>\r\n                                <Button variant='contained' color='secondary' className='btnCancelar'>\r\n                                    Cancelar\r\n                                </Button>\r\n                            </Link>\r\n                            <Button type='submit' variant='contained' color='primary'>\r\n                                    Cadastrar\r\n                            </Button>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca } from '../../../services/Service'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport './ListaPostagem.css';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction ListaPostagem() {\r\n  const [posts, setPosts] = useState<Postagem[]>([])\r\n  let history = useHistory();\r\n  const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (token == \"\") {\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n    });   \r\n      history.push(\"/login\")\r\n\r\n    }\r\n  }, [token])\r\n\r\n  async function getPost() {\r\n    await busca(\"/postagens\", setPosts, {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    getPost()\r\n\r\n  }, [posts.length])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        posts.map(post => (\r\n          <Box m={2} >\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Postagens\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {post.titulo}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.texto}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.tema?.descricao}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n\r\n                  <Link to={`/formularioPostagem/${post.id}`} className=\"text-decorator-none\" >\r\n                    <Box mx={1}>\r\n                      <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                        atualizar\r\n                      </Button>\r\n                    </Box>\r\n                  </Link>\r\n                  <Link to={`/deletarPostagem/${post.id}`} className=\"text-decorator-none\">\r\n                    <Box mx={1}>\r\n                      <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                        deletar\r\n                      </Button>\r\n                    </Box>\r\n                  </Link>\r\n                </Box>\r\n              </CardActions>\r\n            </Card>\r\n          </Box>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListaPostagem;\r\n","import React, {useState} from 'react'\r\nimport { AppBar, Tab, Tabs, Typography, Box } from '@material-ui/core';\r\nimport { TabContext, TabPanel } from '@mui/lab';\r\nimport ListaPostagem from '../listapostagem/ListaPostagem';\r\nimport './TabPostagem.css';\r\n\r\n\r\nfunction TabPostagem() {\r\n    const [value, setValue] = useState('1')\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string){\r\n        setValue(newValue);\r\n    }\r\n  return (\r\n    <>\r\n      <TabContext value={value}>\r\n        <AppBar position=\"static\">\r\n          <Tabs centered indicatorColor=\"secondary\" onChange={handleChange}>\r\n            <Tab label=\"Todas as postagens\" value=\"1\"/>\r\n            <Tab label=\"Sobre-nós\" value=\"2\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel className=\"caixatab\" value=\"1\" >\r\n          <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\r\n            <ListaPostagem />\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel className=\"caixatab\" value=\"2\">\r\n          <Typography variant=\"h5\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className=\"titulo\">Sobre-nós</Typography>\r\n          <Typography variant=\"body1\" gutterBottom color=\"textPrimary\" align=\"justify\">Livraria online com livros sobre sexualidade, estudos de gênero, estudos feministas, romances.</Typography>\r\n        </TabPanel>\r\n      </TabContext>\r\n    </>\r\n  );\r\n}\r\nexport default TabPostagem;","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastroPost.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroPost() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{ id: string }>();\r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: 'top-right',\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: 'colored',\r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n\r\n        }\r\n    }, [token])\r\n\r\n    const [tema, setTema] = useState<Tema>(\r\n        {\r\n            id: 0,\r\n            descricao: ''\r\n        })\r\n    const [postagem, setPostagem] = useState<Postagem>({\r\n        id: 0,\r\n        titulo: '',\r\n        texto: '',\r\n        tema: null\r\n    })\r\n\r\n    useEffect(() => { \r\n        setPostagem({\r\n            ...postagem,\r\n            tema: tema\r\n        })\r\n    }, [tema])\r\n\r\n    useEffect(() => {\r\n        getTemas()\r\n        if (id !== undefined) {\r\n            findByIdPostagem(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function getTemas() {\r\n        await busca(\"/temas\", setTemas, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdPostagem(id: string) {\r\n        await buscaId(`postagens/${id}`, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setPostagem({\r\n            ...postagem,\r\n            [e.target.name]: e.target.value,\r\n            tema: tema\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (id !== undefined) {\r\n            put(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem atualizada com sucesso', {\r\n                position: 'top-right',\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: 'colored',\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            post(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem cadastrada com sucesso', {\r\n                position: 'top-right',\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: 'colored',\r\n                progress: undefined,\r\n            });\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        history.push('/posts')\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\r\n                <TextField value={postagem.titulo} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n                <TextField value={postagem.texto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n\r\n                <FormControl >\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e) => buscaId(`/temas/${e.target.value}`, setTema, {\r\n                            headers: {\r\n                                'Authorization': token\r\n                            }\r\n                        })}>\r\n                        {\r\n                            temas.map(tema => (\r\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {Button,Box } from \"@material-ui/core\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './ModalPostagem.css';\r\nimport CadastroPost from '../cadastroPost/CadastroPost';\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 ;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction ModalPostagem () {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" className=\"cursor\">\r\n        <CloseIcon onClick={handleClose}/>\r\n      \r\n      </Box>\r\n      \r\n      <CadastroPost/>\r\n      \r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className=\"btnModal\"\r\n        onClick={handleOpen}>Nova Postagem</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalPostagem","import React, { useEffect } from 'react';\r\nimport {Typography, Box, Grid, Button} from \"@material-ui/core\";\r\nimport TabPostagem from \"../../components/postagens/tabpostagem/TabPostagem\";\r\nimport { useHistory } from \"react-router\";\r\nimport ModalPostagem from '../../components/postagens/modalPostagem/ModalPostagem';\r\nimport \"./Home.css\";\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../store/tokens/tokensReducer';\r\nimport { Link } from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\n\r\n\r\n\r\nfunction Home(){\r\n\r\n    let history = useHistory();\r\n       const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n     (state) => state.tokens\r\n      );\r\n    \r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });  \r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n    return (\r\n        <>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className=\"caixa\">\r\n                <Grid alignItems=\"center\" item xs={6}>\r\n                    <Box paddingX={20} >\r\n                        <Typography variant=\"h4\" gutterBottom color=\"textPrimary\" component=\"h4\" align=\"center\" className=\"titulo\" >Bem-vindo ao Blog</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className=\"titulo\">expresse aqui os seus pensamentos e opiniões!</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Box marginRight={1}>\r\n                        <ModalPostagem />\r\n                        </Box>\r\n                        <Link to=\"/posts\" className=\"text-decorator-none\">\r\n                        <Button variant=\"outlined\" className=\"botao\">Ver Postagens</Button>\r\n                        </Link>\r\n                    </Box>\r\n\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <img src=\"https://wpimages.mlabs.com.br/wp-content/uploads/2021/09/21121113/mlabs-agendamento-posts.png\" alt=\"\" width=\"450px\" height=\"450px\" />\r\n                </Grid>\r\n                <Grid xs={12} className=\"postagens\"> \r\n                <TabPostagem/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { Grid, Box, Typography, TextField, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './Login.css';\r\nimport UserLogin from '../../models/UserLogin';\r\nimport { login } from '../../services/Service';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToken } from '../../store/tokens/actions';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction Login() {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [token, setToken] = useState('');\r\n \r\n    const [userLogin, setUserLogin] = useState<UserLogin>(\r\n        {\r\n            id: 0,\r\n            usuario: '',\r\n            senha: '',\r\n            token: ''\r\n        }\r\n    )\r\n\r\n        useEffect(() => {\r\n            if(token!=''){\r\n                dispatch(addToken(token))\r\n                history.push('/home')\r\n            }\r\n            \r\n        },[token]);\r\n\r\n  \r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setUserLogin({\r\n            ...userLogin,\r\n            [e.target.name]: e.target.value\r\n        })\r\n      \r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        try {\r\n            await login(`/usuarios/logar`,userLogin,setToken)\r\n            toast.success('Usuário logado com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });     \r\n        } catch (error) {\r\n            toast.error('Dados do usuário inconsistentes. Erro ao logar', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            }); \r\n        }\r\n      \r\n    }\r\n\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid alignItems='center' xs={6}>\r\n                <Box paddingX={\"10%\"}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='textos1'>Entrar</Typography>\r\n                        <TextField id='usuario' label='usuário' variant='outlined' name='usuario' margin='normal' fullWidth \r\n                        value={userLogin.usuario}\r\n                        onChange={(e:ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                        <TextField id='senha' label='senha' variant='outlined' name='senha' margin='normal' type='password' fullWidth \r\n                         value={userLogin.senha}\r\n                         onChange={(e:ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                        <Box marginTop={2} textAlign='center'>\r\n                           \r\n                                <Button type='submit' variant='contained' color='primary'>\r\n                                    Logar\r\n                                </Button>\r\n                            \r\n                        </Box>\r\n                    </form>\r\n                    <Box display='flex' justifyContent='center' marginTop={2}>\r\n                        <Box marginRight={1}>\r\n                            <Typography variant='subtitle1' gutterBottom align='center'>Não tem uma conta?</Typography>\r\n                        </Box>\r\n                        <Link to='/cadastrousuario'>\r\n                            <Typography variant='subtitle1' gutterBottom align='center' className='textos1'>Cadastre-se</Typography>\r\n                        </Link>\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n            <Grid xs={6} className='imagem'>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport Tema from '../../../models/Tema';\r\nimport './ListaTema.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { busca } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction ListaTema() {\r\n  const [temas, setTemas] = useState<Tema[]>([])\r\n  let history = useHistory();\r\n  const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n  );\r\n\r\n  useEffect (()=>{\r\n    if(token == ''){\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n    });   \r\n      history.push('/login')\r\n    }\r\n  }, [token])\r\n\r\n  async function getTema() {\r\n    await busca(\"/temas\", setTemas, {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    }) \r\n  }\r\n\r\n  useEffect(()=> {\r\n    getTema()\r\n  }, [temas.length])\r\n\r\n  return (\r\n    <>\r\n    {\r\n      temas.map(tema => (\r\n      <Box m={2} >\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Tema\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {tema.descricao}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5} >\r\n\r\n              <Link to={`/formularioTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                    atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                    deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n      ))\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ListaTema;","import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport {useHistory, useParams } from 'react-router-dom'\r\nimport './CadastroTema.css';\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });   \r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/temas/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setTema({\r\n                ...tema,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"temas \" + JSON.stringify(tema))\r\n    \r\n            if (id !== undefined) {\r\n                console.log(tema)\r\n                put(`/temas`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Tema atualizado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                });   \r\n            } else {\r\n                post(`/temas`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Tema cadastrado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                });   \r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            history.push('/temas')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;","import React, { useEffect, useState } from 'react'\r\nimport {Typography, Button, Box, Card, CardActions, CardContent } from \"@material-ui/core\"\r\nimport './DeletarPostagem.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction DeletarPostagem() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n    );\r\n    const [post, setPosts] = useState<Postagem>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });   \r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/postagens/${id}`, setPosts, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/posts')\r\n            deleteId(`/postagens/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Postagem deletada com sucesso', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n          });  \r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/posts')\r\n          }\r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\" >\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Postagem:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" >\r\n              {post?.titulo}\r\n              </Typography>\r\n            </Box>\r\n\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n              <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                Sim\r\n              </Button>\r\n              </Box>\r\n              <Box>\r\n              <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                Não\r\n              </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarPostagem;","import React, { useEffect, useState } from 'react'\r\nimport {Box, Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport './DeletarTema.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport Tema from '../../../models/Tema';\r\nimport {toast} from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\n\r\n\r\nfunction DeletarTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n       );\r\n \r\n    const [tema, setTema] = useState<Tema>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });   \r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/temas')\r\n            deleteId(`/temas/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Tema deletado com sucesso', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n          });   \r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/temas')\r\n          }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar o Tema:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {tema?.descricao}\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarTema;","import {Action } from './actions';\r\n\r\nexport interface TokenState {\r\n    tokens: string\r\n}\r\n\r\nconst initialState = {\r\n    tokens: \"\"\r\n}\r\n\r\nexport const tokenReducer = (state: TokenState = initialState, action: Action) =>{\r\n    switch (action.type){\r\n        case \"ADD_TOKEN\": {\r\n            return {tokens: action.payload}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore} from 'redux';\r\nimport { tokenReducer } from './tokens/tokensReducer';\r\n\r\nconst store = createStore(tokenReducer);\r\n\r\nexport default store;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from \"./components/estaticos/navbar/Navbar\";\nimport Footer from \"./components/estaticos/footer/Footer\";\nimport CadastroUsuario from \"./paginas/cadastroUsuario/CadastroUsuario\";\nimport Home from './paginas/home/Home';\nimport Login from \"./paginas/login/Login\";\nimport './App.css';\nimport ListaTema from './components/temas/listatema/ListaTema';\nimport ListaPostagem from './components/postagens/listapostagem/ListaPostagem';\nimport CadastroPost from './components/postagens/cadastroPost/CadastroPost';\nimport CadastroTema from './components/temas/cadastroTema/CadastroTema';\nimport DeletarPostagem from './components/postagens/deletarPostagem/DeletarPostagem';\nimport DeletarTema from './components/temas/deletarTema/DeletarTema';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <ToastContainer />\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n        <Switch>\n          <div style={{minHeight: \"100vh\"}}>\n\n          <Route exact path='/'>\n              <Login />\n            </Route>\n\n          <Route path='/home'>\n              <Home />\n            </Route>\n\n            <Route path='/login'>\n              <Login />\n            </Route>\n\n            <Route path='/cadastrousuario'>\n              <CadastroUsuario />\n            </Route>\n\n            <Route path='/temas'>\n            <ListaTema />\n          </Route>\n          <Route path='/posts'>\n            <ListaPostagem />\n          </Route>\n\n          <Route exact path='/formularioPostagem'>\n            <CadastroPost />\n          </Route>\n          <Route exact path='/formularioPostagem/:id'>\n            <CadastroPost />\n          </Route>\n          <Route exact path='/formularioTema'>\n            <CadastroTema />\n          </Route>\n          <Route exact path='/formularioTema/:id'>\n            <CadastroTema />\n          </Route>\n          <Route path='/deletarPostagem/:id'>\n            <DeletarPostagem />\n          </Route>\n          <Route path='/deletarTema/:id'>\n            <DeletarTema />\n          </Route>\n\n          </div>\n        </Switch>\n      <Footer />\n    </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}